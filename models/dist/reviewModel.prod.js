"use strict";var mongoose=require("mongoose"),Tour=require("./tourModel"),reviewSchema=new mongoose.Schema({description:{type:String},rating:{type:Number,required:[!0,"There must be an rating as well"],max:5,min:1},createdAt:{type:Date,default:Date.now()},tour:{type:mongoose.Schema.ObjectId,ref:"Tour",required:[!0,"Review must belong to an tour"]},user:{type:mongoose.Schema.ObjectId,ref:"User",required:[!0,"A review must belong to an user"]},review:{type:String,required:!0}});reviewSchema.pre(/^find/,function(e){this.populate({path:"user",select:"name photo"}),e()}),reviewSchema.statics.calcAverageRatings=function(r){var t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.aggregate([{$match:{tour:r}},{$group:{_id:"$tour",nRating:{$sum:1},avgRating:{$avg:"$rating"}}}]));case 2:if(t=e.sent,console.log(t),0<t.length)return e.next=7,regeneratorRuntime.awrap(Tour.findByIdAndUpdate(r,{ratingsQuantity:t[0].nRating,ratingsAverage:t[0].avgRating}));e.next=9;break;case 7:e.next=11;break;case 9:return e.next=11,regeneratorRuntime.awrap(Tour.findByIdAndUpdate(r,{ratingsQuantity:0,ratingsAverage:4.5}));case 11:case"end":return e.stop()}},null,this)},reviewSchema.index({tour:1,user:1},{unique:!0}),reviewSchema.pre(/^findOneAnd/,function(r){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.findOne());case 2:this.r=e.sent,console.log(this.r),r();case 5:case"end":return e.stop()}},null,this)}),reviewSchema.post(/^findOneAnd/,function(){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(this.r.constructor.calcAverageRatings(this.r.tour));case 2:case"end":return e.stop()}},null,this)}),reviewSchema.post("save",function(){this.constructor.calcAverageRatings(this.tour)});var Review=mongoose.model("Review",reviewSchema);module.exports=Review;