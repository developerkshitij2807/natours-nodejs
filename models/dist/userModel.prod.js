"use strict";var crypto=require("crypto"),mongoose=require("mongoose"),validator=require("validator"),bcrypt=require("bcryptjs"),userSchema=new mongoose.Schema({name:{type:String,required:[!0,"A user must have a name"],unique:!0},email:{type:String,required:[!0,"A user must have an email"],unique:!0,validate:[validator.isEmail,"Please Provide Valid Email"]},photo:{type:String,default:"default.jpg"},role:{type:String,enum:["user","guide","lead-guide","admin"],default:"user"},password:{type:String,required:[!0,"A user must have an Password"],minlength:[8,"A Password must have min length of 8"],select:!1},passwordConfirm:{type:String,required:[!0,"A user must have confrim Password"],validate:{validator:function(e){return e===this.password},message:"Passwords DO NOT MATCH!"}},passwordChangedAt:Date,passwordResetToken:String,passwordResetExpires:Date,active:{type:Boolean,default:!0,select:!1}});userSchema.pre("save",function(e){if(!this.isModified("password")||this.isNew)return e();this.passwordChangedAt=Date.now()-1e3,e()}),userSchema.pre("save",function(r){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.isModified("password")){e.next=2;break}return e.abrupt("return",r());case 2:return e.next=4,regeneratorRuntime.awrap(bcrypt.hash(this.password,12));case 4:this.password=e.sent,this.passwordConfirm=void 0,r();case 7:case"end":return e.stop()}},null,this)}),userSchema.methods.correctPassword=function(r,s){return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,regeneratorRuntime.awrap(bcrypt.compare(r,s));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}})},userSchema.methods.changedPasswordAfter=function(e){return!!this.passwordChangedAt&&e<parseInt(this.passwordChangedAt.getTime()/1e3,10)},userSchema.methods.createPasswordResetToken=function(){var e=crypto.randomBytes(32).toString("hex");return this.passwordResetToken=crypto.createHash("sha256").update(e).digest("hex"),this.passwordResetExpires=Date.now()+6e5,e},userSchema.pre(/^find/,function(e){this.find({active:{$ne:!1}}),e()});var User=mongoose.model("User",userSchema);module.exports=User;